{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xAEf7A94b0c32509F5c847f50e4Ce829D9452CfD7",
    "txHash": "0x67250f255324b9d6ac032b22bf394e71048481063d02ff71aeeb1633b8c29bd0"
  },
  "proxies": [
    {
      "address": "0x27a339d9B59b21390d7209b78a839868E319301B",
      "txHash": "0x1032ac026653aefcad13d1baa94c6aa6199f3e1ee512812b9ab094a92e53e8ce",
      "kind": "transparent"
    },
    {
      "address": "0x58CB98A966F62aA6F2190eB3AA03132A0c3de3D5",
      "txHash": "0x975b1af9f0c8b58f6f97cff8eff43e206ef342d946063f74ea298cbbeb349861",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d1aeed5a89ff658bb43e38dba7281b1922f7b78de44764fa78dca75886bfdc7d": {
      "address": "0xd3E87D729878cD466C31cCB917efb971730556F4",
      "txHash": "0x1f0324c8e4d98f479e2b90936bcbdb7a877d13f289dad9f16f1e82cb9d56eb77",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "xBlade",
            "label": "tokenBlacklist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/xBlade.sol:12"
          },
          {
            "contract": "xBlade",
            "label": "_sellAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/xBlade.sol:13"
          },
          {
            "contract": "xBlade",
            "label": "_exceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/xBlade.sol:14"
          },
          {
            "contract": "xBlade",
            "label": "_nextClaimTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/xBlade.sol:15"
          },
          {
            "contract": "xBlade",
            "label": "canClaim",
            "type": "t_bool",
            "src": "../project:/contracts/xBlade.sol:17"
          },
          {
            "contract": "xBlade",
            "label": "sellFeeRate",
            "type": "t_uint256",
            "src": "../project:/contracts/xBlade.sol:18"
          },
          {
            "contract": "xBlade",
            "label": "feeAddress",
            "type": "t_address",
            "src": "../project:/contracts/xBlade.sol:19"
          },
          {
            "contract": "xBlade",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/xBlade.sol:20"
          },
          {
            "contract": "xBlade",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "../project:/contracts/xBlade.sol:21"
          },
          {
            "contract": "xBlade",
            "label": "stakerAddress",
            "type": "t_address",
            "src": "../project:/contracts/xBlade.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "989150de95beb2511ae0057e6e44a9357a64eb8d0779a5857a8245cfb3da1944": {
      "address": "0x9607B7825967B03e8c2E2867B39825416cB2c80f",
      "txHash": "0x006648a7ae9e699c2e4216c75ed85263fc864aeb34e7fba9b60166ce2088b3f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "CWController",
            "label": "game",
            "type": "t_address",
            "src": "../project:/contracts/CWController.sol:10"
          },
          {
            "contract": "CWController",
            "label": "reducePerMilestone",
            "type": "t_uint256",
            "src": "../project:/contracts/CWController.sol:11"
          },
          {
            "contract": "CWController",
            "label": "maxReduce",
            "type": "t_uint256",
            "src": "../project:/contracts/CWController.sol:12"
          },
          {
            "contract": "CWController",
            "label": "range",
            "type": "t_uint256",
            "src": "../project:/contracts/CWController.sol:13"
          },
          {
            "contract": "CWController",
            "label": "maxFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/CWController.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f598223754a7b90ee8d161238e62e981a081fef53ab3ddb8ba951f651bf862e6": {
      "address": "0x3c8Cc531b48E18aE52B98d57e675816E6d995bD5",
      "txHash": "0xfce88739d7a105102f98c5325836996ab49ec96f105e407e65ea9faca8450948",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "xBlade",
            "label": "tokenBlacklist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "xBlade.sol:12"
          },
          {
            "contract": "xBlade",
            "label": "_sellAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "xBlade.sol:13"
          },
          {
            "contract": "xBlade",
            "label": "_exceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "xBlade.sol:14"
          },
          {
            "contract": "xBlade",
            "label": "_nextClaimTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "xBlade.sol:15"
          },
          {
            "contract": "xBlade",
            "label": "canClaim",
            "type": "t_bool",
            "src": "xBlade.sol:17"
          },
          {
            "contract": "xBlade",
            "label": "sellFeeRate",
            "type": "t_uint256",
            "src": "xBlade.sol:18"
          },
          {
            "contract": "xBlade",
            "label": "feeAddress",
            "type": "t_address",
            "src": "xBlade.sol:19"
          },
          {
            "contract": "xBlade",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "xBlade.sol:20"
          },
          {
            "contract": "xBlade",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "xBlade.sol:21"
          },
          {
            "contract": "xBlade",
            "label": "stakerAddress",
            "type": "t_address",
            "src": "xBlade.sol:22"
          },
          {
            "contract": "xBlade",
            "label": "airdropEnabled",
            "type": "t_bool",
            "src": "xBlade.sol:23"
          },
          {
            "contract": "xBlade",
            "label": "blacklistContractTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "xBlade.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
